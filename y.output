Terminals unused in grammar

   FOR
   MUL
   DIV
   MOD
   INC
   DEC
   MT
   LT
   MTE
   LTE
   EQ
   NE
   AND
   OR
   NOT
   LSB
   RSB
   CONTINUE
   BREAK
   C_COMMENT
   CPP_COMMENT


Rules useless in parser due to conflicts

   32 tf_initializer: ID

   66 else_if_stats: else_if_stats ELSE single_if_stat
   67              | ELSE single_if_stat


State 8 conflicts: 5 shift/reduce
State 26 conflicts: 3 reduce/reduce
State 63 conflicts: 1 shift/reduce
State 81 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce, 13 reduce/reduce
State 116 conflicts: 1 shift/reduce, 13 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: program global_decl_or_functions
    2        | %empty

    3 global_decl_or_functions: global_decl_or_functions global_decl_or_function
    4                         | global_decl_or_function

    5 global_decl_or_function: global_decl
    6                        | function_define

    7 global_decl: var_decl
    8            | function_decl

    9 var_decl: type ID ASGN initializer SEMICOLON
   10         | type ID SEMICOLON

   11 function_decl: type ID para_area SEMICOLON

   12 para_area: LB paras RB
   13          | LB RB

   14 paras: paras COMMA para
   15      | para

   16 para: type ID

   17 type: INT
   18     | FLOAT
   19     | BOOL
   20     | STRING
   21     | VOID

   22 initializer: logic_initializer
   23            | STR_CONST

   24 logic_initializer: number_initializer
   25                  | tf_initializer

   26 number_initializer: I_CONST
   27                   | F_CONST
   28                   | count_expr
   29                   | ID

   30 tf_initializer: TRUE_RESULT
   31               | FALSE_RESULT
   32               | ID

   33 count_expr: I_CONST ADD I_CONST
   34           | I_CONST SUB I_CONST

   35 function_define: type ID para_area combound_area

   36 combound_area: LCB combound_area_inner RCB

   37 combound_area_inner: combound_area_inner stat
   38                    | %empty

   39 stat: asgn_stat
   40     | var_decl
   41     | print_stat
   42     | function_using
   43     | if_stat
   44     | while_stat
   45     | return_stat
   46     | SEMICOLON

   47 asgn_stat: ID ASGN initializer SEMICOLON
   48          | ID ADDASGN number_initializer SEMICOLON
   49          | ID SUBASGN number_initializer SEMICOLON
   50          | ID MULASGN number_initializer SEMICOLON
   51          | ID DIVASGN number_initializer SEMICOLON
   52          | ID MODASGN number_initializer SEMICOLON

   53 print_stat: PRINT LB STR_CONST RB SEMICOLON
   54           | PRINT LB ID RB SEMICOLON

   55 function_using: ID para_area_using SEMICOLON

   56 para_area_using: LB paras_using RB
   57                | LB RB

   58 paras_using: paras_using COMMA initializer
   59            | initializer

   60 if_stat: single_if_stat else_if_stats else_stat
   61        | single_if_stat else_if_stats
   62        | single_if_stat else_stat
   63        | single_if_stat

   64 single_if_stat: IF LB logic_initializer RB combound_area
   65               | IF LB logic_initializer RB stat

   66 else_if_stats: else_if_stats ELSE single_if_stat
   67              | ELSE single_if_stat

   68 else_stat: ELSE combound_area
   69          | ELSE stat

   70 while_stat: WHILE LB logic_initializer RB combound_area
   71           | WHILE LB logic_initializer RB stat

   72 return_stat: RET initializer SEMICOLON
   73            | RET SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
PRINT (258) 53 54
IF (259) 64 65
ELSE (260) 66 67 68 69
FOR (261)
WHILE (262) 70 71
SEMICOLON (263) 9 10 11 46 47 48 49 50 51 52 53 54 55 72 73
ADD (264) 33
SUB (265) 34
MUL (266)
DIV (267)
MOD (268)
INC (269)
DEC (270)
MT (271)
LT (272)
MTE (273)
LTE (274)
EQ (275)
NE (276)
ASGN (277) 9 47
ADDASGN (278) 48
SUBASGN (279) 49
MULASGN (280) 50
DIVASGN (281) 51
MODASGN (282) 52
AND (283)
OR (284)
NOT (285)
LB (286) 12 13 53 54 56 57 64 65 70 71
RB (287) 12 13 53 54 56 57 64 65 70 71
LCB (288) 36
RCB (289) 36
LSB (290)
RSB (291)
COMMA (292) 14 58
RET (293) 72 73
CONTINUE (294)
BREAK (295)
C_COMMENT (296)
CPP_COMMENT (297)
I_CONST (298) 26 33 34
F_CONST (299) 27
TRUE_RESULT (300) 30
FALSE_RESULT (301) 31
INT (302) 17
FLOAT (303) 18
BOOL (304) 19
STRING (305) 20
VOID (306) 21
STR_CONST (307) 23 53
ID (308) 9 10 11 16 29 32 35 47 48 49 50 51 52 54 55


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0 1
global_decl_or_functions (56)
    on left: 3 4, on right: 1 3
global_decl_or_function (57)
    on left: 5 6, on right: 3 4
global_decl (58)
    on left: 7 8, on right: 5
var_decl (59)
    on left: 9 10, on right: 7 40
function_decl (60)
    on left: 11, on right: 8
para_area (61)
    on left: 12 13, on right: 11 35
paras (62)
    on left: 14 15, on right: 12 14
para (63)
    on left: 16, on right: 14 15
type (64)
    on left: 17 18 19 20 21, on right: 9 10 11 16 35
initializer (65)
    on left: 22 23, on right: 9 47 58 59 72
logic_initializer (66)
    on left: 24 25, on right: 22 64 65 70 71
number_initializer (67)
    on left: 26 27 28 29, on right: 24 48 49 50 51 52
tf_initializer (68)
    on left: 30 31 32, on right: 25
count_expr (69)
    on left: 33 34, on right: 28
function_define (70)
    on left: 35, on right: 6
combound_area (71)
    on left: 36, on right: 35 64 68 70
combound_area_inner (72)
    on left: 37 38, on right: 36 37
stat (73)
    on left: 39 40 41 42 43 44 45 46, on right: 37 65 69 71
asgn_stat (74)
    on left: 47 48 49 50 51 52, on right: 39
print_stat (75)
    on left: 53 54, on right: 41
function_using (76)
    on left: 55, on right: 42
para_area_using (77)
    on left: 56 57, on right: 55
paras_using (78)
    on left: 58 59, on right: 56 58
if_stat (79)
    on left: 60 61 62 63, on right: 43
single_if_stat (80)
    on left: 64 65, on right: 60 61 62 63 66 67
else_if_stats (81)
    on left: 66 67, on right: 60 61 66
else_stat (82)
    on left: 68 69, on right: 60 62
while_stat (83)
    on left: 70 71, on right: 44
return_stat (84)
    on left: 72 73, on right: 45


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . global_decl_or_functions

    $end    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5
    STRING  shift, and go to state 6
    VOID    shift, and go to state 7

    global_decl_or_functions  go to state 8
    global_decl_or_function   go to state 9
    global_decl               go to state 10
    var_decl                  go to state 11
    function_decl             go to state 12
    type                      go to state 13
    function_define           go to state 14


State 2

    0 $accept: program $end .

    $default  accept


State 3

   17 type: INT .

    $default  reduce using rule 17 (type)


State 4

   18 type: FLOAT .

    $default  reduce using rule 18 (type)


State 5

   19 type: BOOL .

    $default  reduce using rule 19 (type)


State 6

   20 type: STRING .

    $default  reduce using rule 20 (type)


State 7

   21 type: VOID .

    $default  reduce using rule 21 (type)


State 8

    1 program: program global_decl_or_functions .
    3 global_decl_or_functions: global_decl_or_functions . global_decl_or_function

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5
    STRING  shift, and go to state 6
    VOID    shift, and go to state 7

    INT       [reduce using rule 1 (program)]
    FLOAT     [reduce using rule 1 (program)]
    BOOL      [reduce using rule 1 (program)]
    STRING    [reduce using rule 1 (program)]
    VOID      [reduce using rule 1 (program)]
    $default  reduce using rule 1 (program)

    global_decl_or_function  go to state 15
    global_decl              go to state 10
    var_decl                 go to state 11
    function_decl            go to state 12
    type                     go to state 13
    function_define          go to state 14


State 9

    4 global_decl_or_functions: global_decl_or_function .

    $default  reduce using rule 4 (global_decl_or_functions)


State 10

    5 global_decl_or_function: global_decl .

    $default  reduce using rule 5 (global_decl_or_function)


State 11

    7 global_decl: var_decl .

    $default  reduce using rule 7 (global_decl)


State 12

    8 global_decl: function_decl .

    $default  reduce using rule 8 (global_decl)


State 13

    9 var_decl: type . ID ASGN initializer SEMICOLON
   10         | type . ID SEMICOLON
   11 function_decl: type . ID para_area SEMICOLON
   35 function_define: type . ID para_area combound_area

    ID  shift, and go to state 16


State 14

    6 global_decl_or_function: function_define .

    $default  reduce using rule 6 (global_decl_or_function)


State 15

    3 global_decl_or_functions: global_decl_or_functions global_decl_or_function .

    $default  reduce using rule 3 (global_decl_or_functions)


State 16

    9 var_decl: type ID . ASGN initializer SEMICOLON
   10         | type ID . SEMICOLON
   11 function_decl: type ID . para_area SEMICOLON
   35 function_define: type ID . para_area combound_area

    SEMICOLON  shift, and go to state 17
    ASGN       shift, and go to state 18
    LB         shift, and go to state 19

    para_area  go to state 20


State 17

   10 var_decl: type ID SEMICOLON .

    $default  reduce using rule 10 (var_decl)


State 18

    9 var_decl: type ID ASGN . initializer SEMICOLON

    I_CONST       shift, and go to state 21
    F_CONST       shift, and go to state 22
    TRUE_RESULT   shift, and go to state 23
    FALSE_RESULT  shift, and go to state 24
    STR_CONST     shift, and go to state 25
    ID            shift, and go to state 26

    initializer         go to state 27
    logic_initializer   go to state 28
    number_initializer  go to state 29
    tf_initializer      go to state 30
    count_expr          go to state 31


State 19

   12 para_area: LB . paras RB
   13          | LB . RB

    RB      shift, and go to state 32
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5
    STRING  shift, and go to state 6
    VOID    shift, and go to state 7

    paras  go to state 33
    para   go to state 34
    type   go to state 35


State 20

   11 function_decl: type ID para_area . SEMICOLON
   35 function_define: type ID para_area . combound_area

    SEMICOLON  shift, and go to state 36
    LCB        shift, and go to state 37

    combound_area  go to state 38


State 21

   26 number_initializer: I_CONST .
   33 count_expr: I_CONST . ADD I_CONST
   34           | I_CONST . SUB I_CONST

    ADD  shift, and go to state 39
    SUB  shift, and go to state 40

    $default  reduce using rule 26 (number_initializer)


State 22

   27 number_initializer: F_CONST .

    $default  reduce using rule 27 (number_initializer)


State 23

   30 tf_initializer: TRUE_RESULT .

    $default  reduce using rule 30 (tf_initializer)


State 24

   31 tf_initializer: FALSE_RESULT .

    $default  reduce using rule 31 (tf_initializer)


State 25

   23 initializer: STR_CONST .

    $default  reduce using rule 23 (initializer)


State 26

   29 number_initializer: ID .
   32 tf_initializer: ID .

    SEMICOLON  reduce using rule 29 (number_initializer)
    SEMICOLON  [reduce using rule 32 (tf_initializer)]
    RB         reduce using rule 29 (number_initializer)
    RB         [reduce using rule 32 (tf_initializer)]
    COMMA      reduce using rule 29 (number_initializer)
    COMMA      [reduce using rule 32 (tf_initializer)]
    $default   reduce using rule 29 (number_initializer)


State 27

    9 var_decl: type ID ASGN initializer . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 28

   22 initializer: logic_initializer .

    $default  reduce using rule 22 (initializer)


State 29

   24 logic_initializer: number_initializer .

    $default  reduce using rule 24 (logic_initializer)


State 30

   25 logic_initializer: tf_initializer .

    $default  reduce using rule 25 (logic_initializer)


State 31

   28 number_initializer: count_expr .

    $default  reduce using rule 28 (number_initializer)


State 32

   13 para_area: LB RB .

    $default  reduce using rule 13 (para_area)


State 33

   12 para_area: LB paras . RB
   14 paras: paras . COMMA para

    RB     shift, and go to state 42
    COMMA  shift, and go to state 43


State 34

   15 paras: para .

    $default  reduce using rule 15 (paras)


State 35

   16 para: type . ID

    ID  shift, and go to state 44


State 36

   11 function_decl: type ID para_area SEMICOLON .

    $default  reduce using rule 11 (function_decl)


State 37

   36 combound_area: LCB . combound_area_inner RCB

    $default  reduce using rule 38 (combound_area_inner)

    combound_area_inner  go to state 45


State 38

   35 function_define: type ID para_area combound_area .

    $default  reduce using rule 35 (function_define)


State 39

   33 count_expr: I_CONST ADD . I_CONST

    I_CONST  shift, and go to state 46


State 40

   34 count_expr: I_CONST SUB . I_CONST

    I_CONST  shift, and go to state 47


State 41

    9 var_decl: type ID ASGN initializer SEMICOLON .

    $default  reduce using rule 9 (var_decl)


State 42

   12 para_area: LB paras RB .

    $default  reduce using rule 12 (para_area)


State 43

   14 paras: paras COMMA . para

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5
    STRING  shift, and go to state 6
    VOID    shift, and go to state 7

    para  go to state 48
    type  go to state 35


State 44

   16 para: type ID .

    $default  reduce using rule 16 (para)


State 45

   36 combound_area: LCB combound_area_inner . RCB
   37 combound_area_inner: combound_area_inner . stat

    PRINT      shift, and go to state 49
    IF         shift, and go to state 50
    WHILE      shift, and go to state 51
    SEMICOLON  shift, and go to state 52
    RCB        shift, and go to state 53
    RET        shift, and go to state 54
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOL       shift, and go to state 5
    STRING     shift, and go to state 6
    VOID       shift, and go to state 7
    ID         shift, and go to state 55

    var_decl        go to state 56
    type            go to state 57
    stat            go to state 58
    asgn_stat       go to state 59
    print_stat      go to state 60
    function_using  go to state 61
    if_stat         go to state 62
    single_if_stat  go to state 63
    while_stat      go to state 64
    return_stat     go to state 65


State 46

   33 count_expr: I_CONST ADD I_CONST .

    $default  reduce using rule 33 (count_expr)


State 47

   34 count_expr: I_CONST SUB I_CONST .

    $default  reduce using rule 34 (count_expr)


State 48

   14 paras: paras COMMA para .

    $default  reduce using rule 14 (paras)


State 49

   53 print_stat: PRINT . LB STR_CONST RB SEMICOLON
   54           | PRINT . LB ID RB SEMICOLON

    LB  shift, and go to state 66


State 50

   64 single_if_stat: IF . LB logic_initializer RB combound_area
   65               | IF . LB logic_initializer RB stat

    LB  shift, and go to state 67


State 51

   70 while_stat: WHILE . LB logic_initializer RB combound_area
   71           | WHILE . LB logic_initializer RB stat

    LB  shift, and go to state 68


State 52

   46 stat: SEMICOLON .

    $default  reduce using rule 46 (stat)


State 53

   36 combound_area: LCB combound_area_inner RCB .

    $default  reduce using rule 36 (combound_area)


State 54

   72 return_stat: RET . initializer SEMICOLON
   73            | RET . SEMICOLON

    SEMICOLON     shift, and go to state 69
    I_CONST       shift, and go to state 21
    F_CONST       shift, and go to state 22
    TRUE_RESULT   shift, and go to state 23
    FALSE_RESULT  shift, and go to state 24
    STR_CONST     shift, and go to state 25
    ID            shift, and go to state 26

    initializer         go to state 70
    logic_initializer   go to state 28
    number_initializer  go to state 29
    tf_initializer      go to state 30
    count_expr          go to state 31


State 55

   47 asgn_stat: ID . ASGN initializer SEMICOLON
   48          | ID . ADDASGN number_initializer SEMICOLON
   49          | ID . SUBASGN number_initializer SEMICOLON
   50          | ID . MULASGN number_initializer SEMICOLON
   51          | ID . DIVASGN number_initializer SEMICOLON
   52          | ID . MODASGN number_initializer SEMICOLON
   55 function_using: ID . para_area_using SEMICOLON

    ASGN     shift, and go to state 71
    ADDASGN  shift, and go to state 72
    SUBASGN  shift, and go to state 73
    MULASGN  shift, and go to state 74
    DIVASGN  shift, and go to state 75
    MODASGN  shift, and go to state 76
    LB       shift, and go to state 77

    para_area_using  go to state 78


State 56

   40 stat: var_decl .

    $default  reduce using rule 40 (stat)


State 57

    9 var_decl: type . ID ASGN initializer SEMICOLON
   10         | type . ID SEMICOLON

    ID  shift, and go to state 79


State 58

   37 combound_area_inner: combound_area_inner stat .

    $default  reduce using rule 37 (combound_area_inner)


State 59

   39 stat: asgn_stat .

    $default  reduce using rule 39 (stat)


State 60

   41 stat: print_stat .

    $default  reduce using rule 41 (stat)


State 61

   42 stat: function_using .

    $default  reduce using rule 42 (stat)


State 62

   43 stat: if_stat .

    $default  reduce using rule 43 (stat)


State 63

   60 if_stat: single_if_stat . else_if_stats else_stat
   61        | single_if_stat . else_if_stats
   62        | single_if_stat . else_stat
   63        | single_if_stat .

    ELSE  shift, and go to state 80

    ELSE      [reduce using rule 63 (if_stat)]
    $default  reduce using rule 63 (if_stat)

    else_if_stats  go to state 81
    else_stat      go to state 82


State 64

   44 stat: while_stat .

    $default  reduce using rule 44 (stat)


State 65

   45 stat: return_stat .

    $default  reduce using rule 45 (stat)


State 66

   53 print_stat: PRINT LB . STR_CONST RB SEMICOLON
   54           | PRINT LB . ID RB SEMICOLON

    STR_CONST  shift, and go to state 83
    ID         shift, and go to state 84


State 67

   64 single_if_stat: IF LB . logic_initializer RB combound_area
   65               | IF LB . logic_initializer RB stat

    I_CONST       shift, and go to state 21
    F_CONST       shift, and go to state 22
    TRUE_RESULT   shift, and go to state 23
    FALSE_RESULT  shift, and go to state 24
    ID            shift, and go to state 26

    logic_initializer   go to state 85
    number_initializer  go to state 29
    tf_initializer      go to state 30
    count_expr          go to state 31


State 68

   70 while_stat: WHILE LB . logic_initializer RB combound_area
   71           | WHILE LB . logic_initializer RB stat

    I_CONST       shift, and go to state 21
    F_CONST       shift, and go to state 22
    TRUE_RESULT   shift, and go to state 23
    FALSE_RESULT  shift, and go to state 24
    ID            shift, and go to state 26

    logic_initializer   go to state 86
    number_initializer  go to state 29
    tf_initializer      go to state 30
    count_expr          go to state 31


State 69

   73 return_stat: RET SEMICOLON .

    $default  reduce using rule 73 (return_stat)


State 70

   72 return_stat: RET initializer . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 71

   47 asgn_stat: ID ASGN . initializer SEMICOLON

    I_CONST       shift, and go to state 21
    F_CONST       shift, and go to state 22
    TRUE_RESULT   shift, and go to state 23
    FALSE_RESULT  shift, and go to state 24
    STR_CONST     shift, and go to state 25
    ID            shift, and go to state 26

    initializer         go to state 88
    logic_initializer   go to state 28
    number_initializer  go to state 29
    tf_initializer      go to state 30
    count_expr          go to state 31


State 72

   48 asgn_stat: ID ADDASGN . number_initializer SEMICOLON

    I_CONST  shift, and go to state 21
    F_CONST  shift, and go to state 22
    ID       shift, and go to state 89

    number_initializer  go to state 90
    count_expr          go to state 31


State 73

   49 asgn_stat: ID SUBASGN . number_initializer SEMICOLON

    I_CONST  shift, and go to state 21
    F_CONST  shift, and go to state 22
    ID       shift, and go to state 89

    number_initializer  go to state 91
    count_expr          go to state 31


State 74

   50 asgn_stat: ID MULASGN . number_initializer SEMICOLON

    I_CONST  shift, and go to state 21
    F_CONST  shift, and go to state 22
    ID       shift, and go to state 89

    number_initializer  go to state 92
    count_expr          go to state 31


State 75

   51 asgn_stat: ID DIVASGN . number_initializer SEMICOLON

    I_CONST  shift, and go to state 21
    F_CONST  shift, and go to state 22
    ID       shift, and go to state 89

    number_initializer  go to state 93
    count_expr          go to state 31


State 76

   52 asgn_stat: ID MODASGN . number_initializer SEMICOLON

    I_CONST  shift, and go to state 21
    F_CONST  shift, and go to state 22
    ID       shift, and go to state 89

    number_initializer  go to state 94
    count_expr          go to state 31


State 77

   56 para_area_using: LB . paras_using RB
   57                | LB . RB

    RB            shift, and go to state 95
    I_CONST       shift, and go to state 21
    F_CONST       shift, and go to state 22
    TRUE_RESULT   shift, and go to state 23
    FALSE_RESULT  shift, and go to state 24
    STR_CONST     shift, and go to state 25
    ID            shift, and go to state 26

    initializer         go to state 96
    logic_initializer   go to state 28
    number_initializer  go to state 29
    tf_initializer      go to state 30
    count_expr          go to state 31
    paras_using         go to state 97


State 78

   55 function_using: ID para_area_using . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 79

    9 var_decl: type ID . ASGN initializer SEMICOLON
   10         | type ID . SEMICOLON

    SEMICOLON  shift, and go to state 17
    ASGN       shift, and go to state 18


State 80

   67 else_if_stats: ELSE . single_if_stat
   68 else_stat: ELSE . combound_area
   69          | ELSE . stat

    PRINT      shift, and go to state 49
    IF         shift, and go to state 50
    WHILE      shift, and go to state 51
    SEMICOLON  shift, and go to state 52
    LCB        shift, and go to state 37
    RET        shift, and go to state 54
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOL       shift, and go to state 5
    STRING     shift, and go to state 6
    VOID       shift, and go to state 7
    ID         shift, and go to state 55

    var_decl        go to state 56
    type            go to state 57
    combound_area   go to state 99
    stat            go to state 100
    asgn_stat       go to state 59
    print_stat      go to state 60
    function_using  go to state 61
    if_stat         go to state 62
    single_if_stat  go to state 101
    while_stat      go to state 64
    return_stat     go to state 65


State 81

   60 if_stat: single_if_stat else_if_stats . else_stat
   61        | single_if_stat else_if_stats .
   66 else_if_stats: else_if_stats . ELSE single_if_stat

    ELSE  shift, and go to state 102

    ELSE      [reduce using rule 61 (if_stat)]
    $default  reduce using rule 61 (if_stat)

    else_stat  go to state 103


State 82

   62 if_stat: single_if_stat else_stat .

    $default  reduce using rule 62 (if_stat)


State 83

   53 print_stat: PRINT LB STR_CONST . RB SEMICOLON

    RB  shift, and go to state 104


State 84

   54 print_stat: PRINT LB ID . RB SEMICOLON

    RB  shift, and go to state 105


State 85

   64 single_if_stat: IF LB logic_initializer . RB combound_area
   65               | IF LB logic_initializer . RB stat

    RB  shift, and go to state 106


State 86

   70 while_stat: WHILE LB logic_initializer . RB combound_area
   71           | WHILE LB logic_initializer . RB stat

    RB  shift, and go to state 107


State 87

   72 return_stat: RET initializer SEMICOLON .

    $default  reduce using rule 72 (return_stat)


State 88

   47 asgn_stat: ID ASGN initializer . SEMICOLON

    SEMICOLON  shift, and go to state 108


State 89

   29 number_initializer: ID .

    $default  reduce using rule 29 (number_initializer)


State 90

   48 asgn_stat: ID ADDASGN number_initializer . SEMICOLON

    SEMICOLON  shift, and go to state 109


State 91

   49 asgn_stat: ID SUBASGN number_initializer . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 92

   50 asgn_stat: ID MULASGN number_initializer . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 93

   51 asgn_stat: ID DIVASGN number_initializer . SEMICOLON

    SEMICOLON  shift, and go to state 112


State 94

   52 asgn_stat: ID MODASGN number_initializer . SEMICOLON

    SEMICOLON  shift, and go to state 113


State 95

   57 para_area_using: LB RB .

    $default  reduce using rule 57 (para_area_using)


State 96

   59 paras_using: initializer .

    $default  reduce using rule 59 (paras_using)


State 97

   56 para_area_using: LB paras_using . RB
   58 paras_using: paras_using . COMMA initializer

    RB     shift, and go to state 114
    COMMA  shift, and go to state 115


State 98

   55 function_using: ID para_area_using SEMICOLON .

    $default  reduce using rule 55 (function_using)


State 99

   68 else_stat: ELSE combound_area .

    $default  reduce using rule 68 (else_stat)


State 100

   69 else_stat: ELSE stat .

    $default  reduce using rule 69 (else_stat)


State 101

   60 if_stat: single_if_stat . else_if_stats else_stat
   61        | single_if_stat . else_if_stats
   62        | single_if_stat . else_stat
   63        | single_if_stat .
   67 else_if_stats: ELSE single_if_stat .

    ELSE  shift, and go to state 80

    PRINT      reduce using rule 63 (if_stat)
    PRINT      [reduce using rule 67 (else_if_stats)]
    IF         reduce using rule 63 (if_stat)
    IF         [reduce using rule 67 (else_if_stats)]
    ELSE       [reduce using rule 63 (if_stat)]
    ELSE       [reduce using rule 67 (else_if_stats)]
    WHILE      reduce using rule 63 (if_stat)
    WHILE      [reduce using rule 67 (else_if_stats)]
    SEMICOLON  reduce using rule 63 (if_stat)
    SEMICOLON  [reduce using rule 67 (else_if_stats)]
    RCB        reduce using rule 63 (if_stat)
    RCB        [reduce using rule 67 (else_if_stats)]
    RET        reduce using rule 63 (if_stat)
    RET        [reduce using rule 67 (else_if_stats)]
    INT        reduce using rule 63 (if_stat)
    INT        [reduce using rule 67 (else_if_stats)]
    FLOAT      reduce using rule 63 (if_stat)
    FLOAT      [reduce using rule 67 (else_if_stats)]
    BOOL       reduce using rule 63 (if_stat)
    BOOL       [reduce using rule 67 (else_if_stats)]
    STRING     reduce using rule 63 (if_stat)
    STRING     [reduce using rule 67 (else_if_stats)]
    VOID       reduce using rule 63 (if_stat)
    VOID       [reduce using rule 67 (else_if_stats)]
    ID         reduce using rule 63 (if_stat)
    ID         [reduce using rule 67 (else_if_stats)]
    $default   reduce using rule 63 (if_stat)

    else_if_stats  go to state 81
    else_stat      go to state 82


State 102

   66 else_if_stats: else_if_stats ELSE . single_if_stat
   68 else_stat: ELSE . combound_area
   69          | ELSE . stat

    PRINT      shift, and go to state 49
    IF         shift, and go to state 50
    WHILE      shift, and go to state 51
    SEMICOLON  shift, and go to state 52
    LCB        shift, and go to state 37
    RET        shift, and go to state 54
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOL       shift, and go to state 5
    STRING     shift, and go to state 6
    VOID       shift, and go to state 7
    ID         shift, and go to state 55

    var_decl        go to state 56
    type            go to state 57
    combound_area   go to state 99
    stat            go to state 100
    asgn_stat       go to state 59
    print_stat      go to state 60
    function_using  go to state 61
    if_stat         go to state 62
    single_if_stat  go to state 116
    while_stat      go to state 64
    return_stat     go to state 65


State 103

   60 if_stat: single_if_stat else_if_stats else_stat .

    $default  reduce using rule 60 (if_stat)


State 104

   53 print_stat: PRINT LB STR_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 117


State 105

   54 print_stat: PRINT LB ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 118


State 106

   64 single_if_stat: IF LB logic_initializer RB . combound_area
   65               | IF LB logic_initializer RB . stat

    PRINT      shift, and go to state 49
    IF         shift, and go to state 50
    WHILE      shift, and go to state 51
    SEMICOLON  shift, and go to state 52
    LCB        shift, and go to state 37
    RET        shift, and go to state 54
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOL       shift, and go to state 5
    STRING     shift, and go to state 6
    VOID       shift, and go to state 7
    ID         shift, and go to state 55

    var_decl        go to state 56
    type            go to state 57
    combound_area   go to state 119
    stat            go to state 120
    asgn_stat       go to state 59
    print_stat      go to state 60
    function_using  go to state 61
    if_stat         go to state 62
    single_if_stat  go to state 63
    while_stat      go to state 64
    return_stat     go to state 65


State 107

   70 while_stat: WHILE LB logic_initializer RB . combound_area
   71           | WHILE LB logic_initializer RB . stat

    PRINT      shift, and go to state 49
    IF         shift, and go to state 50
    WHILE      shift, and go to state 51
    SEMICOLON  shift, and go to state 52
    LCB        shift, and go to state 37
    RET        shift, and go to state 54
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    BOOL       shift, and go to state 5
    STRING     shift, and go to state 6
    VOID       shift, and go to state 7
    ID         shift, and go to state 55

    var_decl        go to state 56
    type            go to state 57
    combound_area   go to state 121
    stat            go to state 122
    asgn_stat       go to state 59
    print_stat      go to state 60
    function_using  go to state 61
    if_stat         go to state 62
    single_if_stat  go to state 63
    while_stat      go to state 64
    return_stat     go to state 65


State 108

   47 asgn_stat: ID ASGN initializer SEMICOLON .

    $default  reduce using rule 47 (asgn_stat)


State 109

   48 asgn_stat: ID ADDASGN number_initializer SEMICOLON .

    $default  reduce using rule 48 (asgn_stat)


State 110

   49 asgn_stat: ID SUBASGN number_initializer SEMICOLON .

    $default  reduce using rule 49 (asgn_stat)


State 111

   50 asgn_stat: ID MULASGN number_initializer SEMICOLON .

    $default  reduce using rule 50 (asgn_stat)


State 112

   51 asgn_stat: ID DIVASGN number_initializer SEMICOLON .

    $default  reduce using rule 51 (asgn_stat)


State 113

   52 asgn_stat: ID MODASGN number_initializer SEMICOLON .

    $default  reduce using rule 52 (asgn_stat)


State 114

   56 para_area_using: LB paras_using RB .

    $default  reduce using rule 56 (para_area_using)


State 115

   58 paras_using: paras_using COMMA . initializer

    I_CONST       shift, and go to state 21
    F_CONST       shift, and go to state 22
    TRUE_RESULT   shift, and go to state 23
    FALSE_RESULT  shift, and go to state 24
    STR_CONST     shift, and go to state 25
    ID            shift, and go to state 26

    initializer         go to state 123
    logic_initializer   go to state 28
    number_initializer  go to state 29
    tf_initializer      go to state 30
    count_expr          go to state 31


State 116

   60 if_stat: single_if_stat . else_if_stats else_stat
   61        | single_if_stat . else_if_stats
   62        | single_if_stat . else_stat
   63        | single_if_stat .
   66 else_if_stats: else_if_stats ELSE single_if_stat .

    ELSE  shift, and go to state 80

    PRINT      reduce using rule 63 (if_stat)
    PRINT      [reduce using rule 66 (else_if_stats)]
    IF         reduce using rule 63 (if_stat)
    IF         [reduce using rule 66 (else_if_stats)]
    ELSE       [reduce using rule 63 (if_stat)]
    ELSE       [reduce using rule 66 (else_if_stats)]
    WHILE      reduce using rule 63 (if_stat)
    WHILE      [reduce using rule 66 (else_if_stats)]
    SEMICOLON  reduce using rule 63 (if_stat)
    SEMICOLON  [reduce using rule 66 (else_if_stats)]
    RCB        reduce using rule 63 (if_stat)
    RCB        [reduce using rule 66 (else_if_stats)]
    RET        reduce using rule 63 (if_stat)
    RET        [reduce using rule 66 (else_if_stats)]
    INT        reduce using rule 63 (if_stat)
    INT        [reduce using rule 66 (else_if_stats)]
    FLOAT      reduce using rule 63 (if_stat)
    FLOAT      [reduce using rule 66 (else_if_stats)]
    BOOL       reduce using rule 63 (if_stat)
    BOOL       [reduce using rule 66 (else_if_stats)]
    STRING     reduce using rule 63 (if_stat)
    STRING     [reduce using rule 66 (else_if_stats)]
    VOID       reduce using rule 63 (if_stat)
    VOID       [reduce using rule 66 (else_if_stats)]
    ID         reduce using rule 63 (if_stat)
    ID         [reduce using rule 66 (else_if_stats)]
    $default   reduce using rule 63 (if_stat)

    else_if_stats  go to state 81
    else_stat      go to state 82


State 117

   53 print_stat: PRINT LB STR_CONST RB SEMICOLON .

    $default  reduce using rule 53 (print_stat)


State 118

   54 print_stat: PRINT LB ID RB SEMICOLON .

    $default  reduce using rule 54 (print_stat)


State 119

   64 single_if_stat: IF LB logic_initializer RB combound_area .

    $default  reduce using rule 64 (single_if_stat)


State 120

   65 single_if_stat: IF LB logic_initializer RB stat .

    $default  reduce using rule 65 (single_if_stat)


State 121

   70 while_stat: WHILE LB logic_initializer RB combound_area .

    $default  reduce using rule 70 (while_stat)


State 122

   71 while_stat: WHILE LB logic_initializer RB stat .

    $default  reduce using rule 71 (while_stat)


State 123

   58 paras_using: paras_using COMMA initializer .

    $default  reduce using rule 58 (paras_using)
